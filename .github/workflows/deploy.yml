name: Deploy All Course Slides to GitHub Pages (Fixed)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build jobs run in PARALLEL - 3x faster!
  build-simta:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build SIMTA
      run: |
        echo "üéì Building SIMTA..."
        cd SIMTA
        npx slidev build presentation.md \
          --base "/mata-kuliah-slides/SIMTA/" \
          --out "../dist/SIMTA"
        cd ..
        
        echo "üìä SIMTA Build verification:"
        if [ -d "dist/SIMTA" ]; then
          echo "‚úÖ SIMTA directory created"
          echo "Files: $(find dist/SIMTA -name "*.html" | wc -l) HTML files"
          ls -la dist/SIMTA/
        else
          echo "‚ùå SIMTA directory not found"
          exit 1
        fi
    - name: Upload SIMTA artifact
      uses: actions/upload-artifact@v3
      with:
        name: simta-build
        path: dist/SIMTA/

  build-cc:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build CC Course
      run: |
        echo "üåê Building Cloud Computing course..."
        mkdir -p dist/CC
        
        for week in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16; do
          echo "Building CC Week ${week}..."
          if npx slidev build "CC/pertemuan-${week}/slides.md" \
            --base "/mata-kuliah-slides/CC/pertemuan-${week}/" \
            --out "dist/CC/pertemuan-${week}"; then
            echo "‚úÖ CC Week ${week} built successfully"
          else
            echo "‚ùå CC Week ${week} build failed"
          fi
        done
        
        echo "üìä CC Build summary:"
        echo "Built directories: $(find dist/CC -name index.html | wc -l) weeks"
    - name: Upload CC artifact
      uses: actions/upload-artifact@v3
      with:
        name: cc-build
        path: dist/CC/

  build-dmjk:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build DMJK Course
      run: |
        echo "üîó Building DMJK course..."
        mkdir -p dist/DMJK
        
        for week in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16; do
          echo "Building DMJK Week ${week}..."
          if npx slidev build "DMJK/pertemuan-${week}/slides.md" \
            --base "/mata-kuliah-slides/DMJK/pertemuan-${week}/" \
            --out "dist/DMJK/pertemuan-${week}"; then
            echo "‚úÖ DMJK Week ${week} built successfully"
          else
            echo "‚ùå DMJK Week ${week} build failed"
          fi
        done
        
        echo "üìä DMJK Build summary:"
        echo "Built directories: $(find dist/DMJK -name index.html | wc -l) weeks"
    - name: Upload DMJK artifact
      uses: actions/upload-artifact@v3
      with:
        name: dmjk-build
        path: dist/DMJK/

  build-promob:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build PROMOB Course
      run: |
        echo "üì± Building Mobile Programming course..."
        mkdir -p dist/PROMOB
        
        for week in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16; do
          echo "Building PROMOB Week ${week}..."
          if npx slidev build "PROMOB/pertemuan-${week}/slides.md" \
            --base "/mata-kuliah-slides/PROMOB/pertemuan-${week}/" \
            --out "dist/PROMOB/pertemuan-${week}"; then
            echo "‚úÖ PROMOB Week ${week} built successfully"
          else
            echo "‚ùå PROMOB Week ${week} build failed"
          fi
        done
        
        echo "üìä PROMOB Build summary:"
        echo "Built directories: $(find dist/PROMOB -name index.html | wc -l) weeks"
    - name: Upload PROMOB artifact
      uses: actions/upload-artifact@v3
      with:
        name: promob-build
        path: dist/PROMOB/

  build-proweb:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build PROWEB Course
      run: |
        echo "üíª Building Web Programming course..."
        mkdir -p dist/PROWEB
        
        for week in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16; do
          echo "Building PROWEB Week ${week}..."
          if npx slidev build "PROWEB/pertemuan-${week}/slides.md" \
            --base "/mata-kuliah-slides/PROWEB/pertemuan-${week}/" \
            --out "dist/PROWEB/pertemuan-${week}"; then
            echo "‚úÖ PROWEB Week ${week} built successfully"
          else
            echo "‚ùå PROWEB Week ${week} build failed"
          fi
        done
        
        echo "üìä PROWEB Build summary:"
        echo "Built directories: $(find dist/PROWEB -name index.html | wc -l) weeks"
    - name: Upload PROWEB artifact
      uses: actions/upload-artifact@v3
      with:
        name: proweb-build
        path: dist/PROWEB/

  # Combine all builds and deploy
  deploy:
    runs-on: ubuntu-latest
    needs: [build-simta, build-cc, build-dmjk, build-promob, build-proweb]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: dist-parts
        
    - name: Debug downloaded artifacts
      run: |
        echo "üîç Downloaded artifacts structure:"
        ls -la dist-parts/
        echo ""
        for dir in dist-parts/*/; do
          echo "Contents of $dir:"
          ls -la "$dir" | head -10
          echo ""
        done
        
    - name: Combine builds
      run: |
        echo "üîÑ Combining all builds..."
        mkdir -p dist
        
        # Copy each course build with proper structure
        if [ -d "dist-parts/simta-build" ]; then
          cp -r dist-parts/simta-build/* dist/
          echo "‚úÖ SIMTA copied"
        fi
        
        if [ -d "dist-parts/cc-build" ]; then
          mkdir -p dist/CC
          cp -r dist-parts/cc-build/* dist/CC/
          echo "‚úÖ CC copied"
        fi
        
        if [ -d "dist-parts/dmjk-build" ]; then
          mkdir -p dist/DMJK  
          cp -r dist-parts/dmjk-build/* dist/DMJK/
          echo "‚úÖ DMJK copied"
        fi
        
        if [ -d "dist-parts/promob-build" ]; then
          mkdir -p dist/PROMOB
          cp -r dist-parts/promob-build/* dist/PROMOB/
          echo "‚úÖ PROMOB copied"
        fi
        
        if [ -d "dist-parts/proweb-build" ]; then
          mkdir -p dist/PROWEB
          cp -r dist-parts/proweb-build/* dist/PROWEB/
          echo "‚úÖ PROWEB copied"
        fi
        
        # Copy landing page
        cp docs/index.html dist/index.html
        cp docs/style.css dist/style.css
        
        echo ""
        echo "‚úÖ Build combination completed"
        echo "üìä Final verification:"
        echo "Landing page: $([ -f "dist/index.html" ] && echo "‚úÖ" || echo "‚ùå")"
        echo "SIMTA: $(find dist -path "*/SIMTA/index.html" | wc -l) pages"
        echo "CC: $(find dist -path "*/CC/*/index.html" | wc -l) pages"
        echo "DMJK: $(find dist -path "*/DMJK/*/index.html" | wc -l) pages"
        echo "PROMOB: $(find dist -path "*/PROMOB/*/index.html" | wc -l) pages"
        echo "PROWEB: $(find dist -path "*/PROWEB/*/index.html" | wc -l) pages"
        echo "Total: $(find dist -name "index.html" | wc -l) pages"

    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4