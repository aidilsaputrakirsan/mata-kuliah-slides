name: Deploy All Course Slides to GitHub Pages (v4 Fixed)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build jobs run in PARALLEL - 3x faster!
  build-simta:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build SIMTA
      run: |
        echo "🎓 Building SIMTA..."
        cd SIMTA
        npx slidev build presentation.md \
          --base "/mata-kuliah-slides/SIMTA/" \
          --out "../dist-simta"
        cd ..
        
        echo "📊 SIMTA Build verification:"
        if [ -d "dist-simta" ]; then
          echo "✅ SIMTA directory created"
          echo "Files: $(find dist-simta -name "*.html" | wc -l) HTML files"
          ls -la dist-simta/
        else
          echo "❌ SIMTA directory not found"
          exit 1
        fi
    - name: Upload SIMTA artifact
      uses: actions/upload-artifact@v4
      with:
        name: simta-build
        path: dist-simta/

  build-cc:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build CC Course
      run: |
        echo "🌐 Building Cloud Computing course..."
        mkdir -p dist-cc
        
        for week in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16; do
          echo "Building CC Week ${week}..."
          if npx slidev build "CC/pertemuan-${week}/slides.md" \
            --base "/mata-kuliah-slides/CC/pertemuan-${week}/" \
            --out "dist-cc/pertemuan-${week}"; then
            echo "✅ CC Week ${week} built successfully"
          else
            echo "❌ CC Week ${week} build failed"
          fi
        done
        
        echo "📊 CC Build summary:"
        echo "Built directories: $(find dist-cc -name index.html | wc -l) weeks"
        ls -la dist-cc/
    - name: Upload CC artifact
      uses: actions/upload-artifact@v4
      with:
        name: cc-build
        path: dist-cc/

  build-dmjk:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build DMJK Course
      run: |
        echo "🔗 Building DMJK course..."
        mkdir -p dist-dmjk
        
        for week in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16; do
          echo "Building DMJK Week ${week}..."
          if npx slidev build "DMJK/pertemuan-${week}/slides.md" \
            --base "/mata-kuliah-slides/DMJK/pertemuan-${week}/" \
            --out "dist-dmjk/pertemuan-${week}"; then
            echo "✅ DMJK Week ${week} built successfully"
          else
            echo "❌ DMJK Week ${week} build failed"
          fi
        done
        
        echo "📊 DMJK Build summary:"
        echo "Built directories: $(find dist-dmjk -name index.html | wc -l) weeks"
    - name: Upload DMJK artifact
      uses: actions/upload-artifact@v4
      with:
        name: dmjk-build
        path: dist-dmjk/

  build-promob:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build PROMOB Course
      run: |
        echo "📱 Building Mobile Programming course..."
        mkdir -p dist-promob
        
        for week in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16; do
          echo "Building PROMOB Week ${week}..."
          if npx slidev build "PROMOB/pertemuan-${week}/slides.md" \
            --base "/mata-kuliah-slides/PROMOB/pertemuan-${week}/" \
            --out "dist-promob/pertemuan-${week}"; then
            echo "✅ PROMOB Week ${week} built successfully"
          else
            echo "❌ PROMOB Week ${week} build failed"
          fi
        done
        
        echo "📊 PROMOB Build summary:"
        echo "Built directories: $(find dist-promob -name index.html | wc -l) weeks"
    - name: Upload PROMOB artifact
      uses: actions/upload-artifact@v4
      with:
        name: promob-build
        path: dist-promob/

  build-proweb:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build PROWEB Course
      run: |
        echo "💻 Building Web Programming course..."
        mkdir -p dist-proweb
        
        for week in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16; do
          echo "Building PROWEB Week ${week}..."
          if npx slidev build "PROWEB/pertemuan-${week}/slides.md" \
            --base "/mata-kuliah-slides/PROWEB/pertemuan-${week}/" \
            --out "dist-proweb/pertemuan-${week}"; then
            echo "✅ PROWEB Week ${week} built successfully"
          else
            echo "❌ PROWEB Week ${week} build failed"
          fi
        done
        
        echo "📊 PROWEB Build summary:"
        echo "Built directories: $(find dist-proweb -name index.html | wc -l) weeks"
    - name: Upload PROWEB artifact
      uses: actions/upload-artifact@v4
      with:
        name: proweb-build
        path: dist-proweb/

  # Combine all builds and deploy
  deploy:
    runs-on: ubuntu-latest
    needs: [build-simta, build-cc, build-dmjk, build-promob, build-proweb]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: downloaded-artifacts
        
    - name: Debug downloaded artifacts
      run: |
        echo "🔍 Downloaded artifacts structure:"
        ls -la downloaded-artifacts/
        echo ""
        for dir in downloaded-artifacts/*/; do
          echo "Contents of $dir:"
          ls -la "$dir" | head -10
          echo ""
        done
        
    - name: Combine builds
      run: |
        echo "🔄 Combining all builds..."
        mkdir -p dist
        
        # Copy SIMTA (should be at root level for /SIMTA/ URL)
        if [ -d "downloaded-artifacts/simta-build" ]; then
          cp -r downloaded-artifacts/simta-build/* dist/
          echo "✅ SIMTA copied to dist/"
        fi
        
        # Copy CC course
        if [ -d "downloaded-artifacts/cc-build" ]; then
          mkdir -p dist/CC
          cp -r downloaded-artifacts/cc-build/* dist/CC/
          echo "✅ CC copied to dist/CC/"
        fi
        
        # Copy DMJK course
        if [ -d "downloaded-artifacts/dmjk-build" ]; then
          mkdir -p dist/DMJK
          cp -r downloaded-artifacts/dmjk-build/* dist/DMJK/
          echo "✅ DMJK copied to dist/DMJK/"
        fi
        
        # Copy PROMOB course
        if [ -d "downloaded-artifacts/promob-build" ]; then
          mkdir -p dist/PROMOB
          cp -r downloaded-artifacts/promob-build/* dist/PROMOB/
          echo "✅ PROMOB copied to dist/PROMOB/"
        fi
        
        # Copy PROWEB course
        if [ -d "downloaded-artifacts/proweb-build" ]; then
          mkdir -p dist/PROWEB
          cp -r downloaded-artifacts/proweb-build/* dist/PROWEB/
          echo "✅ PROWEB copied to dist/PROWEB/"
        fi
        
        # Copy landing page
        cp docs/index.html dist/index.html
        cp docs/style.css dist/style.css
        
        echo ""
        echo "✅ Build combination completed"
        echo "📊 Final structure verification:"
        echo "Landing page: $([ -f "dist/index.html" ] && echo "✅" || echo "❌")"
        echo "CSS file: $([ -f "dist/style.css" ] && echo "✅" || echo "❌")"
        echo ""
        echo "Course pages:"
        echo "SIMTA: $(find dist -path "*/SIMTA/index.html" -o -name "index.html" -path "dist/index.html" | grep -v "dist/index.html" | wc -l) pages"
        echo "CC: $(find dist/CC -name "index.html" 2>/dev/null | wc -l) pages" 
        echo "DMJK: $(find dist/DMJK -name "index.html" 2>/dev/null | wc -l) pages"
        echo "PROMOB: $(find dist/PROMOB -name "index.html" 2>/dev/null | wc -l) pages"
        echo "PROWEB: $(find dist/PROWEB -name "index.html" 2>/dev/null | wc -l) pages"
        echo ""
        echo "Total HTML files: $(find dist -name "index.html" | wc -l)"
        
        echo ""
        echo "📁 Final dist/ structure:"
        find dist -name "index.html" | sort | head -20

    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v4
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4